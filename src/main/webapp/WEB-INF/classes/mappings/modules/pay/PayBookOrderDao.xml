<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javafast.modules.pay.dao.PayBookOrderDao">
    
	<sql id="payBookOrderColumns">
		a.id AS "id",
		a.no AS "no",
		a.amount AS "amount",
		a.product_id AS "productId",
		a.mobile AS "mobile",
		a.name AS "name",
		a.company AS "company",
		a.scale_type AS "scaleType",
		a.email AS "email",
		a.qq AS "qq",
		a.notes AS "notes",
		a.status AS "status",
		a.pay_type AS "payType",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		a.del_flag AS "delFlag",
		a.account_id AS "accountId"
	</sql>
	
	<sql id="payBookOrderJoins">
	</sql>
    
	<select id="get" resultType="PayBookOrder">
		SELECT 
			<include refid="payBookOrderColumns"/>
		FROM pay_book_order a
		<include refid="payBookOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PayBookOrder">
		SELECT 
			<include refid="payBookOrderColumns"/>
		FROM pay_book_order a
		<include refid="payBookOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="no != null and no != ''">
				AND a.no = #{no}
			</if>
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			<if test="mobile != null and mobile != ''">
				AND a.mobile = #{mobile}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="company != null and company != ''">
				AND a.company LIKE 
					<if test="dbName == 'oracle'">'%'||#{company}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{company}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{company},'%')</if>
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			<if test="payType != null and payType != ''">
				AND a.pay_type = #{payType}
			</if>
			<if test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
				AND a.create_date BETWEEN #{beginCreateDate} AND #{endCreateDate}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PayBookOrder">
		SELECT 
			<include refid="payBookOrderColumns"/>
		FROM pay_book_order a
		<include refid="payBookOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO pay_book_order(
			id,
			no,
			amount,
			product_id,
			mobile,
			name,
			company,
			scale_type,
			email,
			qq,
			notes,
			status,
			pay_type,
			create_date,
			create_by,
			update_date,
			update_by,
			del_flag,
			account_id
		) VALUES (
			#{id},
			#{no},
			#{amount},
			#{productId},
			#{mobile},
			#{name},
			#{company},
			#{scaleType},
			#{email},
			#{qq},
			#{notes},
			#{status},
			#{payType},
			#{createDate},
			#{createBy.id},
			#{updateDate},
			#{updateBy.id},
			#{delFlag},
			#{accountId}
		)
	</insert>

	<update id="update">
		UPDATE pay_book_order SET
						no = #{no},
			amount = #{amount},
			product_id = #{productId},
			mobile = #{mobile},
			name = #{name},
			company = #{company},
			scale_type = #{scaleType},
			email = #{email},
			qq = #{qq},
			notes = #{notes},
			status = #{status},
			pay_type = #{payType},
			update_date = #{updateDate},
			update_by = #{updateBy.id}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE pay_book_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="PayBookOrder" statementType="STATEMENT">
		select * FROM pay_book_order  where ${propertyName} = '${value}'
	</select>

</mapper>